name: Docker Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          load: true
          tags: movie-app-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          load: true
          tags: movie-app-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Start Backend Container
        run: docker run -d --name test-backend -p 3000:3000 -e PORT=3000 -e MONGO_URI=${{ secrets.MONGO_URI }} -e CLIENT_ORIGIN=http://localhost:80 movie-app-backend:latest


      - name: Wait for Backend
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000/health > /dev/null; then
              echo "✅ Backend is up!"
              exit 0
            fi
            echo "⏳ Waiting for backend..."
            sleep 2
          done
          echo "❌ Backend failed to start"
          docker logs test-backend
          exit 1

      - name: Start Frontend Container
        run: docker run -d --name test-frontend -p 80:80 movie-app-frontend:latest && sleep 5

      - name: Smoke Test Backend Health
        run: |
          curl -f http://localhost:3000/health || exit 1

      - name: API Test - Movies Endpoint
        run: |
          echo "Testing /api/movies endpoint..."
          curl -f http://localhost:3000/api/movies || (docker logs test-backend && exit 1)

      - name: Smoke Test Frontend
        run: |
          curl -f http://localhost:80 || exit 1

      - name: Cleanup
        if: always()
        run: |
          docker stop test-backend test-frontend || true
          docker rm test-backend test-frontend || true
